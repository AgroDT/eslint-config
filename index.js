import reactRefresh from 'eslint-plugin-react-refresh';
import reactHooks from 'eslint-plugin-react-hooks';
import tseslint from 'typescript-eslint';
import stylistic from '@stylistic/eslint-plugin';
import globals from 'globals';

/** @type {import('eslint').Linter.Config[]} */
const config = [
  {ignores: ['dist', 'node_modules']},
  ...tseslint.configs.recommended,
  reactRefresh.configs.recommended,
  {
    languageOptions: {
      ecmaVersion: 2020,
      globals: globals.browser,
    },
    plugins: {
      '@stylistic': stylistic,
      'react-hooks': reactHooks,
    },
    rules: {
      ...reactHooks.configs.recommended.rules,
      'react-refresh/only-export-components': [
        'error',
        {allowConstantExport: true},
      ],
      'id-length': ['error', {min: 3, properties: 'never', exceptions: ['id', 'e', '_e', 'i', '_', 'fs']}],
      curly: ['error', 'all'],
      'arrow-body-style': 0,
      '@typescript-eslint/no-explicit-any': 'warn',
      '@typescript-eslint/ban-ts-comment': 'off',
      '@stylistic/semi': ['error', 'always'],
      '@stylistic/array-bracket-spacing': ['error', 'never'],
      '@stylistic/arrow-spacing': ['error', {before: true, after: true}],
      '@stylistic/block-spacing': ['error', 'never'],
      '@stylistic/comma-spacing': ['error', {before: false, after: true}],
      '@stylistic/computed-property-spacing': ['error', 'never'],
      '@stylistic/function-call-spacing': ['error', 'never'],
      '@stylistic/key-spacing': ['error', {beforeColon: false, afterColon: true, mode: 'strict'}],
      '@stylistic/keyword-spacing': ['error', {before: true, after: true}],
      '@stylistic/no-mixed-spaces-and-tabs': 'error',
      '@stylistic/no-multi-spaces': ['error', {ignoreEOLComments: true, includeTabs: true}],
      '@stylistic/no-trailing-spaces': ['error', {ignoreComments: true}],
      '@stylistic/no-whitespace-before-property': 'error',
      '@stylistic/object-curly-spacing': ['error', 'never'],
      '@stylistic/rest-spread-spacing': ['error', 'never'],
      '@stylistic/semi-spacing': ['error', {before: false, after: true}],
      '@stylistic/space-before-blocks': ['error', 'always'],
      '@stylistic/space-before-function-paren': ['error', {
        anonymous: 'never',
        named: 'never',
        asyncArrow: 'always',
      }],
      '@stylistic/space-in-parens': ['error', 'never'],
      '@stylistic/space-infix-ops': ['error', {int32Hint: false}],
      '@stylistic/space-unary-ops': ['error', {words: true, nonwords: false}],
      '@stylistic/spaced-comment': ['error', 'always'],
      '@stylistic/switch-colon-spacing': ['error', {after: true, before: false}],
      '@stylistic/template-curly-spacing': ['error', 'never'],
      '@stylistic/array-bracket-newline': ['error', 'consistent'],
      '@stylistic/array-element-newline': ['error', 'consistent'],
      '@stylistic/function-call-argument-newline': ['error', 'consistent'],
      '@stylistic/function-paren-newline': ['error', 'consistent'],
      '@stylistic/implicit-arrow-linebreak': ['error', 'beside'],
      '@stylistic/linebreak-style': ['error', 'unix'],
      '@stylistic/lines-between-class-members': ['error', 'always'],
      '@stylistic/newline-per-chained-call': 'off',
      '@stylistic/object-curly-newline': ['error', {ObjectPattern: {multiline: true}}],
      '@stylistic/object-property-newline': ['error', {allowAllPropertiesOnSameLine: true}],
      '@stylistic/operator-linebreak': ['error', 'before'],
      '@stylistic/arrow-parens': ['error', 'as-needed'],
      '@stylistic/brace-style': 'error',
      '@stylistic/new-parens': ['error', 'always'],
      '@stylistic/wrap-iife': ['error', 'inside'],
      '@stylistic/indent': [2, 2],
      '@stylistic/jsx-quotes': ['error', 'prefer-single'],
      '@stylistic/quote-props': ['error', 'as-needed'],
      '@stylistic/quotes': ['error', 'single'],
      '@stylistic/comma-style': ['error', 'last'],
      '@stylistic/comma-dangle': ['error', {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        imports: 'always-multiline',
        exports: 'always-multiline',
        functions: 'never',
      }],
      '@stylistic/no-extra-semi': 'error',
      '@stylistic/semi-style': ['error', 'last'],
      '@stylistic/dot-location': ['error', 'property'],
      '@stylistic/multiline-ternary': ['error', 'always-multiline'],
      '@stylistic/no-mixed-operators': 'error',
      '@stylistic/no-confusing-arrow': ['error', {allowParens: true, onlyOneSimpleParam: false}],
      '@stylistic/no-floating-decimal': 'error',
      '@stylistic/no-multiple-empty-lines': ['error', {max: 1}],
      '@stylistic/no-tabs': 'error',
      '@stylistic/max-len': ['error', {code: 140}],
      '@stylistic/padding-line-between-statements': [
        'error',
        {blankLine: 'always', prev: '*', next: 'return'},
        {
          blankLine: 'always',
          prev: '*',
          next: ['interface', 'type'],
        },
      ],
      '@stylistic/jsx-closing-bracket-location': [2, 'tag-aligned'],
      '@stylistic/jsx-closing-tag-location': 'error',
      '@stylistic/jsx-curly-brace-presence': ['error', 'never'],
      '@stylistic/jsx-curly-spacing': ['error', {when: 'never', allowMultiline: false}],
      '@stylistic/jsx-equals-spacing': [2, 'never'],
      '@stylistic/jsx-indent-props': [2, 2],
      '@stylistic/jsx-first-prop-new-line': ['error', 'multiline'],
      '@stylistic/jsx-max-props-per-line': [2, {maximum: 1}],
      '@stylistic/jsx-newline': [2, {prevent: true}],
      '@stylistic/jsx-one-expression-per-line': [2, {allow: 'none'}],
      '@stylistic/no-multi-spaces': 'error',
      '@stylistic/jsx-tag-spacing': [2, {
        closingSlash: 'never',
        beforeSelfClosing: 'never',
        afterOpening: 'never',
        beforeClosing: 'never',
      }],
      '@stylistic/jsx-wrap-multilines': [2, {
        declaration: 'parens-new-line',
        assignment: 'parens-new-line',
        return: 'parens-new-line',
        arrow: 'parens-new-line',
        condition: 'parens-new-line',
        logical: 'parens-new-line',
        prop: 'parens-new-line',
      }],
      '@stylistic/jsx-sort-props': [2, {
        shorthandLast: true,
        noSortAlphabetically: true,
        reservedFirst: true,
      }],
      '@stylistic/jsx-curly-newline': ['error', {
        multiline: 'forbid',
        singleline: 'forbid',
      }],
      '@stylistic/indent-binary-ops': ['error', 2],
      '@stylistic/type-generic-spacing': ['error'],
      '@stylistic/type-named-tuple-spacing': ['error'],
      '@stylistic/type-annotation-spacing': 'error',
      '@stylistic/member-delimiter-style': ['error', {
        multiline: {
          delimiter: 'comma',
          requireLast: true,
        },
        singleline: {
          delimiter: 'comma',
          requireLast: false,
        },
        multilineDetection: 'brackets',
      }],
    },
  },
];

export default config;